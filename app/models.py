from app import db

class Response(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    book = db.Column(db.String(120))
    project = db.Column(db.Integer)
    stretch = db.Column(db.Integer)
    prosodic = db.Column(db.Integer)
    momentum = db.Column(db.Integer)
    sentencelength = db.Column(db.Integer)
    prosaic = db.Column(db.Integer)
    notissue = db.Column(db.Integer)
    bigabstraction = db.Column(db.Integer)
    memorize = db.Column(db.Integer)
    pagecanvas = db.Column(db.Integer)
    communicationvolume = db.Column(db.Integer)
    contentvolume = db.Column(db.Integer)
    shock = db.Column(db.Integer)
    humor = db.Column(db.Integer)
    sound = db.Column(db.Integer)
    argument = db.Column(db.Integer)
    structural = db.Column(db.Integer)
    otherattributes = db.Column(db.Integer)
    loose = db.Column(db.Integer)
    historical = db.Column(db.Integer)
    associative = db.Column(db.Integer)
    variedregister = db.Column(db.Integer)
    syntax = db.Column(db.Integer)
    breakrules = db.Column(db.Integer)
    mainpoint = db.Column(db.Integer)
    meta = db.Column(db.Integer)
    scan = db.Column(db.Integer)
    abstractthinking = db.Column(db.Integer)
    explanation = db.Column(db.Integer)
    realworld = db.Column(db.Integer)
    singleself = db.Column(db.Integer)
    authorflag = db.Column(db.Integer)
    flag0 = db.Column(db.Integer)
    flag1 = db.Column(db.Integer)
    flag2 = db.Column(db.Integer)
    consistent = db.Column(db.Integer)
    shortline = db.Column(db.Integer)
    mediumline = db.Column(db.Integer)
    longline = db.Column(db.Integer)
    asserts = db.Column(db.Integer)
    absurd = db.Column(db.Integer)
    logical = db.Column(db.Integer)
    low = db.Column(db.Integer)
    middle = db.Column(db.Integer)
    high = db.Column(db.Integer)
    coherentlinear = db.Column(db.Integer)
    coherentjumping = db.Column(db.Integer)
    absurdsurreal = db.Column(db.Integer)
    causeeffectyes = db.Column(db.Integer)
    causeeffectno = db.Column(db.Integer)

    def __repr__(self):
        return '<Response {0} ({1})>'.format(self.id, self.book)

class Factor(db.Model):
    __tablename__ = 'factor'
    id = db.Column(db.Integer, primary_key=True)
    book = db.Column(db.String(120))
    label = db.Column(db.String(120))
    Factor1 = db.Column(db.Float)
    Factor2 = db.Column(db.Float)
    Factor3 = db.Column(db.Float)
    variable = db.Column(db.String(120))
    clust = db.Column(db.String(120))
    poet = db.Column(db.String(120))

    def __repr__(self):
        return '<Factor {0} ({1})>'.format(self.id, self.book)
